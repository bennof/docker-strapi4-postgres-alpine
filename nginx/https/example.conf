server {
    listen 80;
    listen [::]:80;
    
    server_name www.mydomain.com;
    
    location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/letsencrypt;
    }

	location / {
        rewrite ^ https://$host$request_uri? permanent;
    }
}

server {
	listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name www.mydomain.com;
	server_tokens off;

	# set DNS resolver as Docker internal DNS
    resolver 127.0.0.11 valid=10s;
    resolver_timeout 5s; 

    ssl_certificate /etc/letsencrypt/live/mydomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;

    include /etc/nginx/conf.d/options-ssl-nginx.conf;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

    # using strapi at /db/...
    # add url: 'https://localhost/db' to exports at strapi/config/server.js
	location ~ ^/db(/?)(.*)$ {
        proxy_pass http://strapi_edo365:1337/$2$is_args$args;
		proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass_request_headers on;
    	        
    }
}